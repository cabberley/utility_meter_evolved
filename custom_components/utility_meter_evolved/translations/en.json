{
    "config": {
        "error": {
            "tariffs_not_unique": "Tariffs must be unique",
            "invalid_cron": "The Cron pattern you entered is invalid. Please check the syntax."
        },
        "step": {
            "user": {
                "data": {
                    "config_type": "Configuration type",
                    "name": "New Sensor Name",
                    "source": "Input sensor",
                    "source_calc_sensor": "Input calculation sensor (optional)"
                },
                "data_description": {
                    "config_type": "Choose a predefined reset cycle or create a custom CRON pattern.",
                    "source_calc_sensor": "If you want to use a sensor to Calculate a price Meter based on the Usuage of the Utility Meter, please select it here. If not selected, the meter will just report the source value."
                },
                "description": "Create a sensor which tracks consumption of various utilities (e.g., energy, gas, water, heating) over a configured period of time. The utility meter sensor optionally supports splitting the consumption by tariffs, in that case one sensor for each tariff is created as well as a select entity to choose the current tariff and optionally calculating a $$ cost by combining with a price sensor.",
                "title": "Create an Evolved Utility Meter"
            },
            "predefined": {
                "data": {
                    "always_available": "Sensor always available",
                    "cycle": "Predefined Reset Cycle",
                    "delta_values": "Delta Values",
                    "name": "New Sensor Name",
                    "net_consumption": "Net Consumption",
                    "offset": "Offset (optional, e.g., to set a starting value for the meter)",
                    "periodically_resetting": "Periodically resetting",
                    "remove_calc_sensor": "Remove Calculation Sensor",
                    "reset_cycle": "Reset Cycle",
                    "source": "Input sensor",
                    "source_calc_sensor": "Input calculation sensor (optional)",
                    "tariffs": "Tariffs - add a 'total' tariff to track total consumption"
                },
                "description": "",
                "title": "Create the Meter using the preefined schedules",
                "data_description": {
                    "always_available": "If activated, the sensor will always show the last known value, even if the source entity is unavailable or unknown.",
                    "periodically_resetting": "Enable if the source may periodically reset to 0, for example at boot of the measuring device. If disabled, new readings are directly recorded after data inavailability."
                }
            },
            "cron": {
                "data": {
                    "always_available": "Sensor always available",
                    "name": "New Sensor Name",
                    "source": "Input sensor",
                    "source_calc_sensor": "Input calculation sensor (optional)",
                    "tariffs": "Tariffs - add a 'total' tariff to track total consumption",
                    "net_consumption": "Net Consumption",
                    "periodically_resetting": "Periodically resetting",
                    "reset_cycle_cron": "Custom CRON Pattern",
                    "cycle": "Custom Reset Cycle",
                    "delta_values": "Delta Values",
                    "cron": "create a cron pattern e.g 0/5 * * * *"
                },
                "description": "",
                "title": "Create a Meter using a CRON pattern",
                "data_description": {
                    "always_available": "If activated, the sensor will always show the last known value, even if the source entity is unavailable or unknown.",
                    "periodically_resetting": "Enable if the source may periodically reset to 0, for example at boot of the measuring device. If disabled, new readings are directly recorded after data inavailability."
                }
            }
        }
    },
    "options": {
        "step": {
            "init": {
                "data": {
                    "always_available": "Sensor always available",
                    "periodically_resetting": "Periodically resetting",
                    "source": "Input sensor to track consumption (Required)",
                    "source_calc_sensor": "Input calculation sensor (optional if you wish to create a price meter)",
                    "tariffs": "Tariffs - add a 'total' tariff to track total consumption",
                    "net_consumption": "Net Consumption",
                    "reset_cycle": "Reset Cycle",
                    "reset_cycle_cron": "Custom CRON Pattern",
                    "cycle": "Predefined Reset Cycle",
                    "delta_values": "Delta Values",
                    "remove_calc_sensor": "Remove Calculation Sensor",
                    "offset": "Offset (optional, e.g., to set a starting value for the meter)"
                },
                "data_description": {
                    "always_available": "If activated, the sensor will always show the last known value, even if the source entity is unavailable or unknown.",
                    "periodically_resetting": "Enable if the source may periodically reset to 0, for example at boot of the measuring device. If disabled, new readings are directly recorded after data inavailability."
                }
            }
        }
    },
    "selector": {
        "cycle": {
            "options": {
                "bimonthly": "Every two months",
                "daily": "Daily",
                "every-five-minutes": "Every 5 minutes",
                "half-hourly": "Every 30 minutes",
                "half-yearly": "Half Yearly",
                "hourly": "Hourly",
                "monthly": "Monthly",
                "none": "No cycle",
                "quarter-hourly": "Every 15 minutes",
                "quarterly": "Quarterly",
                "weekly": "Weekly",
                "yearly": "Yearly"
            }
        },
        "config_type": {
            "options": {
            "cron": "Create Custom CRON Pattern",
            "predefined": "Use Predefined reset cycle"
            }
        }
    },
    "services": {
        "calibrate": {
            "description": "Calibrates a utility meter sensor.",
            "fields": {
                "value": {
                    "description": "Value to which set the meter.",
                    "name": "Value"
                }
            },
            "name": "Calibrate"
        },
        "reset": {
            "description": "Resets all counters of a utility meter.",
            "name": "Reset"
        }
    },
    "title": "Utility Meter Evolved"
}
